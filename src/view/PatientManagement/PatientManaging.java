/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.PatientManagement;

import Controller.PatientManagement.PatientController;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import model.patientModels.Patient;
import model.patientModels.PatientFood;
import org.apache.commons.validator.EmailValidator;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import util.DBUtil;
import static util.DBUtil.LOG;
import util.Util;
import util.Validation;
import util.messageAlert;

/**
 *
 * @author Y4SHVINE
 */
public class PatientManaging extends javax.swing.JFrame {

    /**
     * Creates new form PatientSignUp
     */
    public PatientManaging() {
        initComponents();
        Util.resizeColumnWidth(detailPatientTable);
        Util.resizeColumnWidth(pfDetailTable);
        fNameErrorIcon.setVisible(false);
        lNameErrorIcon.setVisible(false);
        emailErrorIcon.setVisible(false);
        phoneNumberErrorIcon.setVisible(false);
        nicErrorIcon.setVisible(false);
        PropertyConfigurator.configure(Util.PROPERTY_FILE_PATH);
        LOG = Logger.getLogger(PatientManaging.class);
        signupPID.setText(String.valueOf(getLatestPatientID() + 1));

        //Patient Details
        patientDetailsEditables(false);

        //PatientDiat Details
        PatientController.getInstance().getDiatList(foodDiatType);
        patientDiatDetailsEditables(false);
    }
    //public static Logger LOG;
    boolean signupRegisterBtnVali = false;
    private List<Patient> patientSearchResultList;
    private List<PatientFood> patientFoodSearchResultList;
    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    //private Date d1 = new Date();

    private int getLatestPatientID() {
        try {
            return Patient.getLatestPatientID();
        } catch (Exception ex) {
            LOG.error(ex);
            return 0;
        }
    }

    private void patientDetailsEditables(boolean val) {
        detailPFirstName.setEditable(val);
        detailPLastName.setEditable(val);
        detailPDateofBirth.setEnabled(val);
        detailSexCombo.setEnabled(val);
        detailPEmail1.setEditable(val);
        detailPPhoneNumber.setEditable(val);
        detailPNIC.setEditable(val);
        detailPAddress.setEditable(val);
        detailPCity.setEditable(val);
        detailPCode.setEditable(val);
        detailPAdditionalInfo.setEditable(val);
    }

    private void patientDiatDetailsEditables(boolean val) {
        foodPIDs.setEnabled(val);
        foodDiatType.setEnabled(val);
        foodDStartDate.setEnabled(val);
        foodDEndDate.setEnabled(val);
        foodUpdateBtn.setEnabled(val);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Servicespnel = new javax.swing.JTabbedPane();
        patientSignUpPanel = new javax.swing.JPanel();
        signupPID = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        signupFNameLbl = new javax.swing.JLabel();
        signupPFirstName = new javax.swing.JTextField();
        patientSignUpLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        signupPLastName = new javax.swing.JTextField();
        signupEmailLbl = new javax.swing.JLabel();
        signupPEmail = new javax.swing.JTextField();
        signupDOBLbl = new javax.swing.JLabel();
        signupPDateofBirth = new com.toedter.calendar.JDateChooser();
        signupEmailLbl1 = new javax.swing.JLabel();
        signupPPhoneNumber = new javax.swing.JTextField();
        signupSexlLbl = new javax.swing.JLabel();
        signupPSexCombo = new javax.swing.JComboBox<>();
        signupNICLbl = new javax.swing.JLabel();
        signupPNIC = new javax.swing.JTextField();
        signupPAddress = new javax.swing.JTextField();
        signupAddressLbl = new javax.swing.JLabel();
        signupPCity = new javax.swing.JTextField();
        signupNICLbl2 = new javax.swing.JLabel();
        signupPCode = new javax.swing.JTextField();
        signupCodeLbl = new javax.swing.JLabel();
        signupCodeLbl1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        signupPAdditionalInfo = new javax.swing.JTextArea();
        signupSubmitBtn = new javax.swing.JButton();
        fNameErrorIcon = new javax.swing.JLabel();
        lNameErrorIcon = new javax.swing.JLabel();
        emailErrorIcon = new javax.swing.JLabel();
        nicErrorIcon = new javax.swing.JLabel();
        phoneNumberErrorIcon = new javax.swing.JLabel();
        patientDetailsPanel = new javax.swing.JPanel();
        signupNICLbl1 = new javax.swing.JLabel();
        detailPNIC = new javax.swing.JTextField();
        signupAddressLbl1 = new javax.swing.JLabel();
        detailPAddress = new javax.swing.JTextField();
        detailPCity = new javax.swing.JTextField();
        signupNICLbl3 = new javax.swing.JLabel();
        signupCodeLbl2 = new javax.swing.JLabel();
        detailPCode = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        detailPAdditionalInfo = new javax.swing.JTextArea();
        signupCodeLbl3 = new javax.swing.JLabel();
        detailPPhoneNumber = new javax.swing.JTextField();
        signupEmailLbl2 = new javax.swing.JLabel();
        signupEmailLbl3 = new javax.swing.JLabel();
        detailPEmail1 = new javax.swing.JTextField();
        detailSexCombo = new javax.swing.JComboBox<>();
        detailPDateofBirth = new com.toedter.calendar.JDateChooser();
        signupDOBLbl1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        detailPLastName = new javax.swing.JTextField();
        pDetailsSearchText = new javax.swing.JTextField();
        signupFNameLbl1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        detailPID = new javax.swing.JLabel();
        patientSignUpLbl1 = new javax.swing.JLabel();
        detailsSubmitBtn = new javax.swing.JButton();
        detailReportBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        detailPFirstName = new javax.swing.JTextField();
        pDetailsSearchBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        detailPatientTable = new javax.swing.JTable();
        signupEmailLbl4 = new javax.swing.JLabel();
        detailEditBtn = new javax.swing.JButton();
        patientFoodPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pfsearchField = new javax.swing.JTextField();
        pfSearchBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        foodPIDs = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        foodDStartDate = new com.toedter.calendar.JDateChooser();
        signupDOBLbl2 = new javax.swing.JLabel();
        signupDOBLbl3 = new javax.swing.JLabel();
        foodDEndDate = new com.toedter.calendar.JDateChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        pfDetailTable = new javax.swing.JTable();
        foodEditBtn = new javax.swing.JButton();
        foodUpdateBtn = new javax.swing.JButton();
        patientSignUpLbl2 = new javax.swing.JLabel();
        foodDiatType = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        newServiceBtn = new javax.swing.JButton();
        CheckUpBtn = new javax.swing.JButton();
        OperationBtn = new javax.swing.JButton();
        patientSignUpLbl3 = new javax.swing.JLabel();
        patientManagementLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1765, 770));
        setMinimumSize(new java.awt.Dimension(1765, 770));
        setPreferredSize(new java.awt.Dimension(1765, 770));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        Servicespnel.setBackground(new java.awt.Color(0, 0, 0));

        patientSignUpPanel.setBackground(new java.awt.Color(0, 0, 0));
        patientSignUpPanel.setLayout(null);

        signupPID.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        signupPID.setForeground(new java.awt.Color(255, 255, 255));
        signupPID.setText("1");
        signupPID.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPID.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPID.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupPID);
        signupPID.setBounds(300, 75, 300, 35);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Patient ID");
        jLabel4.setMaximumSize(new java.awt.Dimension(200, 35));
        jLabel4.setMinimumSize(new java.awt.Dimension(200, 35));
        jLabel4.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(jLabel4);
        jLabel4.setBounds(100, 75, 200, 35);

        signupFNameLbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupFNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        signupFNameLbl.setText("First Name");
        signupFNameLbl.setMaximumSize(new java.awt.Dimension(200, 35));
        signupFNameLbl.setMinimumSize(new java.awt.Dimension(200, 35));
        signupFNameLbl.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupFNameLbl);
        signupFNameLbl.setBounds(100, 150, 200, 35);

        signupPFirstName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPFirstName.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPFirstName.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPFirstName.setPreferredSize(new java.awt.Dimension(200, 35));
        signupPFirstName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signupPFirstNameCaretUpdate(evt);
            }
        });
        patientSignUpPanel.add(signupPFirstName);
        signupPFirstName.setBounds(300, 150, 300, 35);

        patientSignUpLbl.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        patientSignUpLbl.setForeground(new java.awt.Color(255, 255, 255));
        patientSignUpLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patientSignUpLbl.setText("Patient Registration");
        patientSignUpPanel.add(patientSignUpLbl);
        patientSignUpLbl.setBounds(10, 10, 1720, 50);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Last Name");
        jLabel3.setMaximumSize(new java.awt.Dimension(200, 35));
        jLabel3.setMinimumSize(new java.awt.Dimension(200, 35));
        jLabel3.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(jLabel3);
        jLabel3.setBounds(100, 225, 200, 35);

        signupPLastName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPLastName.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPLastName.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPLastName.setPreferredSize(new java.awt.Dimension(200, 35));
        signupPLastName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signupPLastNameCaretUpdate(evt);
            }
        });
        patientSignUpPanel.add(signupPLastName);
        signupPLastName.setBounds(300, 225, 300, 35);

        signupEmailLbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupEmailLbl.setForeground(new java.awt.Color(255, 255, 255));
        signupEmailLbl.setText("Email");
        signupEmailLbl.setMaximumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl.setMinimumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupEmailLbl);
        signupEmailLbl.setBounds(100, 450, 200, 35);

        signupPEmail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPEmail.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPEmail.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPEmail.setPreferredSize(new java.awt.Dimension(200, 35));
        signupPEmail.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signupPEmailCaretUpdate(evt);
            }
        });
        patientSignUpPanel.add(signupPEmail);
        signupPEmail.setBounds(300, 450, 300, 35);

        signupDOBLbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupDOBLbl.setForeground(new java.awt.Color(255, 255, 255));
        signupDOBLbl.setText("Date of Birth");
        signupDOBLbl.setMaximumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl.setMinimumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupDOBLbl);
        signupDOBLbl.setBounds(100, 300, 200, 35);

        signupPDateofBirth.setMaxSelectableDate(new Date());
        patientSignUpPanel.add(signupPDateofBirth);
        signupPDateofBirth.setBounds(300, 300, 300, 35);

        signupEmailLbl1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupEmailLbl1.setForeground(new java.awt.Color(255, 255, 255));
        signupEmailLbl1.setText("Phone Number");
        signupEmailLbl1.setMaximumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl1.setMinimumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl1.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupEmailLbl1);
        signupEmailLbl1.setBounds(100, 525, 200, 35);

        signupPPhoneNumber.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPPhoneNumber.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPPhoneNumber.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPPhoneNumber.setPreferredSize(new java.awt.Dimension(200, 35));
        signupPPhoneNumber.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signupPPhoneNumberCaretUpdate(evt);
            }
        });
        patientSignUpPanel.add(signupPPhoneNumber);
        signupPPhoneNumber.setBounds(300, 525, 300, 35);

        signupSexlLbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupSexlLbl.setForeground(new java.awt.Color(255, 255, 255));
        signupSexlLbl.setText("Sex");
        signupSexlLbl.setMaximumSize(new java.awt.Dimension(200, 35));
        signupSexlLbl.setMinimumSize(new java.awt.Dimension(200, 35));
        signupSexlLbl.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupSexlLbl);
        signupSexlLbl.setBounds(100, 375, 200, 35);

        signupPSexCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        patientSignUpPanel.add(signupPSexCombo);
        signupPSexCombo.setBounds(300, 375, 300, 35);

        signupNICLbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupNICLbl.setForeground(new java.awt.Color(255, 255, 255));
        signupNICLbl.setText("NIC");
        signupNICLbl.setMaximumSize(new java.awt.Dimension(200, 35));
        signupNICLbl.setMinimumSize(new java.awt.Dimension(200, 35));
        signupNICLbl.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupNICLbl);
        signupNICLbl.setBounds(1130, 75, 200, 35);

        signupPNIC.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPNIC.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPNIC.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPNIC.setPreferredSize(new java.awt.Dimension(200, 35));
        signupPNIC.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                signupPNICCaretUpdate(evt);
            }
        });
        patientSignUpPanel.add(signupPNIC);
        signupPNIC.setBounds(1330, 75, 300, 35);

        signupPAddress.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPAddress.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPAddress.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPAddress.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupPAddress);
        signupPAddress.setBounds(1330, 150, 300, 35);

        signupAddressLbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupAddressLbl.setForeground(new java.awt.Color(255, 255, 255));
        signupAddressLbl.setText("Address");
        signupAddressLbl.setMaximumSize(new java.awt.Dimension(200, 35));
        signupAddressLbl.setMinimumSize(new java.awt.Dimension(200, 35));
        signupAddressLbl.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupAddressLbl);
        signupAddressLbl.setBounds(1130, 150, 200, 35);

        signupPCity.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPCity.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPCity.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPCity.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupPCity);
        signupPCity.setBounds(1330, 225, 300, 35);

        signupNICLbl2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupNICLbl2.setForeground(new java.awt.Color(255, 255, 255));
        signupNICLbl2.setText("City");
        signupNICLbl2.setMaximumSize(new java.awt.Dimension(200, 35));
        signupNICLbl2.setMinimumSize(new java.awt.Dimension(200, 35));
        signupNICLbl2.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupNICLbl2);
        signupNICLbl2.setBounds(1130, 225, 200, 35);

        signupPCode.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        signupPCode.setMaximumSize(new java.awt.Dimension(200, 35));
        signupPCode.setMinimumSize(new java.awt.Dimension(200, 35));
        signupPCode.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupPCode);
        signupPCode.setBounds(1330, 300, 300, 35);

        signupCodeLbl.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupCodeLbl.setForeground(new java.awt.Color(255, 255, 255));
        signupCodeLbl.setText("Zip / Postal Code");
        signupCodeLbl.setMaximumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl.setMinimumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupCodeLbl);
        signupCodeLbl.setBounds(1130, 300, 200, 35);

        signupCodeLbl1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupCodeLbl1.setForeground(new java.awt.Color(255, 255, 255));
        signupCodeLbl1.setText("Additional Infomation");
        signupCodeLbl1.setMaximumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl1.setMinimumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl1.setPreferredSize(new java.awt.Dimension(200, 35));
        patientSignUpPanel.add(signupCodeLbl1);
        signupCodeLbl1.setBounds(1130, 375, 200, 35);

        signupPAdditionalInfo.setColumns(20);
        signupPAdditionalInfo.setRows(5);
        jScrollPane1.setViewportView(signupPAdditionalInfo);

        patientSignUpPanel.add(jScrollPane1);
        jScrollPane1.setBounds(1330, 370, 300, 190);

        signupSubmitBtn.setText("Submit");
        signupSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupSubmitBtnActionPerformed(evt);
            }
        });
        patientSignUpPanel.add(signupSubmitBtn);
        signupSubmitBtn.setBounds(750, 560, 200, 35);

        fNameErrorIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/common/Wrong.png"))); // NOI18N
        patientSignUpPanel.add(fNameErrorIcon);
        fNameErrorIcon.setBounds(610, 150, 15, 35);

        lNameErrorIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/common/Wrong.png"))); // NOI18N
        patientSignUpPanel.add(lNameErrorIcon);
        lNameErrorIcon.setBounds(610, 225, 15, 35);

        emailErrorIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/common/Wrong.png"))); // NOI18N
        patientSignUpPanel.add(emailErrorIcon);
        emailErrorIcon.setBounds(610, 450, 15, 35);

        nicErrorIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/common/Wrong.png"))); // NOI18N
        patientSignUpPanel.add(nicErrorIcon);
        nicErrorIcon.setBounds(1640, 75, 15, 35);

        phoneNumberErrorIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/images/common/Wrong.png"))); // NOI18N
        patientSignUpPanel.add(phoneNumberErrorIcon);
        phoneNumberErrorIcon.setBounds(610, 525, 15, 35);

        Servicespnel.addTab("Patient Registration", patientSignUpPanel);

        patientDetailsPanel.setBackground(new java.awt.Color(0, 0, 0));
        patientDetailsPanel.setLayout(null);

        signupNICLbl1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupNICLbl1.setForeground(new java.awt.Color(255, 255, 255));
        signupNICLbl1.setText("NIC");
        signupNICLbl1.setMaximumSize(new java.awt.Dimension(200, 35));
        signupNICLbl1.setMinimumSize(new java.awt.Dimension(200, 35));
        signupNICLbl1.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupNICLbl1);
        signupNICLbl1.setBounds(890, 150, 200, 35);

        detailPNIC.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPNIC.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPNIC.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPNIC.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPNIC);
        detailPNIC.setBounds(1090, 150, 300, 35);

        signupAddressLbl1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupAddressLbl1.setForeground(new java.awt.Color(255, 255, 255));
        signupAddressLbl1.setText("Address");
        signupAddressLbl1.setMaximumSize(new java.awt.Dimension(200, 35));
        signupAddressLbl1.setMinimumSize(new java.awt.Dimension(200, 35));
        signupAddressLbl1.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupAddressLbl1);
        signupAddressLbl1.setBounds(890, 200, 200, 35);

        detailPAddress.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPAddress.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPAddress.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPAddress.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPAddress);
        detailPAddress.setBounds(1090, 200, 300, 35);

        detailPCity.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPCity.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPCity.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPCity.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPCity);
        detailPCity.setBounds(1090, 250, 300, 35);

        signupNICLbl3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupNICLbl3.setForeground(new java.awt.Color(255, 255, 255));
        signupNICLbl3.setText("City");
        signupNICLbl3.setMaximumSize(new java.awt.Dimension(200, 35));
        signupNICLbl3.setMinimumSize(new java.awt.Dimension(200, 35));
        signupNICLbl3.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupNICLbl3);
        signupNICLbl3.setBounds(890, 250, 200, 35);

        signupCodeLbl2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupCodeLbl2.setForeground(new java.awt.Color(255, 255, 255));
        signupCodeLbl2.setText("Zip / Postal Code");
        signupCodeLbl2.setMaximumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl2.setMinimumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl2.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupCodeLbl2);
        signupCodeLbl2.setBounds(890, 300, 200, 35);

        detailPCode.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPCode.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPCode.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPCode.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPCode);
        detailPCode.setBounds(1090, 300, 300, 35);

        detailPAdditionalInfo.setColumns(20);
        detailPAdditionalInfo.setRows(5);
        jScrollPane2.setViewportView(detailPAdditionalInfo);

        patientDetailsPanel.add(jScrollPane2);
        jScrollPane2.setBounds(1090, 350, 300, 70);

        signupCodeLbl3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupCodeLbl3.setForeground(new java.awt.Color(255, 255, 255));
        signupCodeLbl3.setText("Additional Infomation");
        signupCodeLbl3.setMaximumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl3.setMinimumSize(new java.awt.Dimension(200, 35));
        signupCodeLbl3.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupCodeLbl3);
        signupCodeLbl3.setBounds(890, 350, 200, 35);

        detailPPhoneNumber.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPPhoneNumber.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPPhoneNumber.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPPhoneNumber.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPPhoneNumber);
        detailPPhoneNumber.setBounds(1090, 100, 300, 35);

        signupEmailLbl2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupEmailLbl2.setForeground(new java.awt.Color(255, 255, 255));
        signupEmailLbl2.setText("Phone Number");
        signupEmailLbl2.setMaximumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl2.setMinimumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl2.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupEmailLbl2);
        signupEmailLbl2.setBounds(890, 100, 200, 35);

        signupEmailLbl3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupEmailLbl3.setForeground(new java.awt.Color(255, 255, 255));
        signupEmailLbl3.setText("Email");
        signupEmailLbl3.setMaximumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl3.setMinimumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl3.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupEmailLbl3);
        signupEmailLbl3.setBounds(100, 350, 200, 35);

        detailPEmail1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPEmail1.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPEmail1.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPEmail1.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPEmail1);
        detailPEmail1.setBounds(300, 350, 300, 35);

        detailSexCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        patientDetailsPanel.add(detailSexCombo);
        detailSexCombo.setBounds(300, 300, 300, 35);

        detailPDateofBirth.setMaxSelectableDate(new Date());
        patientDetailsPanel.add(detailPDateofBirth);
        detailPDateofBirth.setBounds(300, 250, 300, 35);

        signupDOBLbl1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupDOBLbl1.setForeground(new java.awt.Color(255, 255, 255));
        signupDOBLbl1.setText("Date of Birth");
        signupDOBLbl1.setMaximumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl1.setMinimumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl1.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupDOBLbl1);
        signupDOBLbl1.setBounds(100, 250, 200, 35);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Last Name");
        jLabel5.setMaximumSize(new java.awt.Dimension(200, 35));
        jLabel5.setMinimumSize(new java.awt.Dimension(200, 35));
        jLabel5.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(jLabel5);
        jLabel5.setBounds(100, 200, 200, 35);

        detailPLastName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPLastName.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPLastName.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPLastName.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPLastName);
        detailPLastName.setBounds(300, 200, 300, 35);

        pDetailsSearchText.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        pDetailsSearchText.setMaximumSize(new java.awt.Dimension(200, 35));
        pDetailsSearchText.setMinimumSize(new java.awt.Dimension(200, 35));
        pDetailsSearchText.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(pDetailsSearchText);
        pDetailsSearchText.setBounds(300, 50, 200, 35);

        signupFNameLbl1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupFNameLbl1.setForeground(new java.awt.Color(255, 255, 255));
        signupFNameLbl1.setText("First Name");
        signupFNameLbl1.setMaximumSize(new java.awt.Dimension(200, 35));
        signupFNameLbl1.setMinimumSize(new java.awt.Dimension(200, 35));
        signupFNameLbl1.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupFNameLbl1);
        signupFNameLbl1.setBounds(100, 150, 200, 35);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Patient ID");
        jLabel6.setMaximumSize(new java.awt.Dimension(200, 35));
        jLabel6.setMinimumSize(new java.awt.Dimension(200, 35));
        jLabel6.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(jLabel6);
        jLabel6.setBounds(100, 100, 200, 35);

        detailPID.setForeground(new java.awt.Color(255, 255, 255));
        detailPID.setText("Patient ID");
        detailPID.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPID.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPID.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPID);
        detailPID.setBounds(300, 100, 300, 35);

        patientSignUpLbl1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        patientSignUpLbl1.setForeground(new java.awt.Color(255, 255, 255));
        patientSignUpLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patientSignUpLbl1.setText("Patient Details");
        patientDetailsPanel.add(patientSignUpLbl1);
        patientSignUpLbl1.setBounds(100, 0, 1550, 50);

        detailsSubmitBtn.setText("Submit");
        detailsSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsSubmitBtnActionPerformed(evt);
            }
        });
        patientDetailsPanel.add(detailsSubmitBtn);
        detailsSubmitBtn.setBounds(1450, 200, 200, 35);

        detailReportBtn.setText("Reorts");
        patientDetailsPanel.add(detailReportBtn);
        detailReportBtn.setBounds(1450, 300, 200, 35);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Name or Patient ID");
        jLabel7.setMaximumSize(new java.awt.Dimension(200, 35));
        jLabel7.setMinimumSize(new java.awt.Dimension(200, 35));
        jLabel7.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(jLabel7);
        jLabel7.setBounds(100, 50, 200, 35);

        detailPFirstName.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        detailPFirstName.setMaximumSize(new java.awt.Dimension(200, 35));
        detailPFirstName.setMinimumSize(new java.awt.Dimension(200, 35));
        detailPFirstName.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(detailPFirstName);
        detailPFirstName.setBounds(300, 150, 300, 35);

        pDetailsSearchBtn.setText("Search");
        pDetailsSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pDetailsSearchBtnActionPerformed(evt);
            }
        });
        patientDetailsPanel.add(pDetailsSearchBtn);
        pDetailsSearchBtn.setBounds(500, 50, 100, 35);

        detailPatientTable.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        detailPatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient ID", "First Name", "Last Name", "Sex"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        detailPatientTable.setAlignmentX(2.5F);
        detailPatientTable.setAlignmentY(2.5F);
        detailPatientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                detailPatientTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(detailPatientTable);

        patientDetailsPanel.add(jScrollPane3);
        jScrollPane3.setBounds(90, 430, 1300, 180);

        signupEmailLbl4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupEmailLbl4.setForeground(new java.awt.Color(255, 255, 255));
        signupEmailLbl4.setText("Sex");
        signupEmailLbl4.setMaximumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl4.setMinimumSize(new java.awt.Dimension(200, 35));
        signupEmailLbl4.setPreferredSize(new java.awt.Dimension(200, 35));
        patientDetailsPanel.add(signupEmailLbl4);
        signupEmailLbl4.setBounds(100, 300, 200, 35);

        detailEditBtn.setText("Edit");
        detailEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailEditBtnActionPerformed(evt);
            }
        });
        patientDetailsPanel.add(detailEditBtn);
        detailEditBtn.setBounds(1450, 100, 200, 35);

        Servicespnel.addTab("Patient Details and Reports", patientDetailsPanel);

        patientFoodPanel.setBackground(new java.awt.Color(0, 0, 0));
        patientFoodPanel.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Patient ID or Name");
        patientFoodPanel.add(jLabel1);
        jLabel1.setBounds(100, 75, 200, 35);
        patientFoodPanel.add(pfsearchField);
        pfsearchField.setBounds(300, 75, 200, 35);

        pfSearchBtn.setText("Search");
        pfSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfSearchBtnActionPerformed(evt);
            }
        });
        patientFoodPanel.add(pfSearchBtn);
        pfSearchBtn.setBounds(500, 75, 100, 35);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Diat Type");
        patientFoodPanel.add(jLabel2);
        jLabel2.setBounds(100, 225, 200, 35);

        patientFoodPanel.add(foodPIDs);
        foodPIDs.setBounds(300, 150, 300, 35);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Patient ID ");
        patientFoodPanel.add(jLabel8);
        jLabel8.setBounds(100, 150, 200, 35);

        foodDStartDate.setMinSelectableDate(new Date());
        patientFoodPanel.add(foodDStartDate);
        foodDStartDate.setBounds(940, 150, 300, 35);

        signupDOBLbl2.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupDOBLbl2.setForeground(new java.awt.Color(255, 255, 255));
        signupDOBLbl2.setText("Start Date");
        signupDOBLbl2.setMaximumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl2.setMinimumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl2.setPreferredSize(new java.awt.Dimension(200, 35));
        patientFoodPanel.add(signupDOBLbl2);
        signupDOBLbl2.setBounds(740, 150, 200, 35);

        signupDOBLbl3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        signupDOBLbl3.setForeground(new java.awt.Color(255, 255, 255));
        signupDOBLbl3.setText("End Date");
        signupDOBLbl3.setMaximumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl3.setMinimumSize(new java.awt.Dimension(200, 35));
        signupDOBLbl3.setPreferredSize(new java.awt.Dimension(200, 35));
        patientFoodPanel.add(signupDOBLbl3);
        signupDOBLbl3.setBounds(740, 225, 200, 35);

        foodDEndDate.setMaxSelectableDate(foodDStartDate.getDate());
        patientFoodPanel.add(foodDEndDate);
        foodDEndDate.setBounds(940, 225, 300, 35);

        pfDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", "First Name", "Last Name", "Diat Type", "Start Date", "End Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pfDetailTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pfDetailTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(pfDetailTable);

        patientFoodPanel.add(jScrollPane4);
        jScrollPane4.setBounds(100, 300, 1520, 270);

        foodEditBtn.setText("Edit");
        foodEditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodEditBtnActionPerformed(evt);
            }
        });
        patientFoodPanel.add(foodEditBtn);
        foodEditBtn.setBounds(1410, 150, 200, 35);

        foodUpdateBtn.setText("Update");
        foodUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodUpdateBtnActionPerformed(evt);
            }
        });
        patientFoodPanel.add(foodUpdateBtn);
        foodUpdateBtn.setBounds(1410, 225, 200, 35);

        patientSignUpLbl2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        patientSignUpLbl2.setForeground(new java.awt.Color(255, 255, 255));
        patientSignUpLbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patientSignUpLbl2.setText("Patient - Food Management");
        patientFoodPanel.add(patientSignUpLbl2);
        patientSignUpLbl2.setBounds(100, 0, 1510, 50);

        patientFoodPanel.add(foodDiatType);
        foodDiatType.setBounds(300, 225, 300, 35);

        Servicespnel.addTab("Patient - Food Management", patientFoodPanel);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(null);

        newServiceBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        newServiceBtn.setText("Add New Service");
        newServiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newServiceBtnActionPerformed(evt);
            }
        });
        jPanel2.add(newServiceBtn);
        newServiceBtn.setBounds(690, 460, 400, 70);

        CheckUpBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CheckUpBtn.setText("CheckUp Service");
        CheckUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckUpBtnActionPerformed(evt);
            }
        });
        jPanel2.add(CheckUpBtn);
        CheckUpBtn.setBounds(690, 150, 400, 70);

        OperationBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        OperationBtn.setText("Operation Service");
        OperationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OperationBtnActionPerformed(evt);
            }
        });
        jPanel2.add(OperationBtn);
        OperationBtn.setBounds(690, 300, 400, 70);

        patientSignUpLbl3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        patientSignUpLbl3.setForeground(new java.awt.Color(255, 255, 255));
        patientSignUpLbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patientSignUpLbl3.setText("Services");
        jPanel2.add(patientSignUpLbl3);
        patientSignUpLbl3.setBounds(100, 0, 1510, 50);

        Servicespnel.addTab("Services", jPanel2);

        jPanel1.add(Servicespnel);
        Servicespnel.setBounds(10, 90, 1740, 670);

        patientManagementLbl.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        patientManagementLbl.setForeground(new java.awt.Color(255, 255, 255));
        patientManagementLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patientManagementLbl.setText("Patient Management");
        jPanel1.add(patientManagementLbl);
        patientManagementLbl.setBounds(10, 20, 1740, 60);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1770, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void foodUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodUpdateBtnActionPerformed
        try {
            PatientFood pf = new PatientFood(
                    foodPIDs.getSelectedItem().toString(),
                    foodDiatType.getSelectedItem().toString(),
                    Util.convertUtilDateToSqlDate(foodDStartDate.getDate()),
                    Util.convertUtilDateToSqlDate(foodDEndDate.getDate())
            );
            boolean updatepf = PatientController.getInstance().updatePatientDiat(pf);
            if (updatepf) {
                messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Msg_Succesfully_Updated"), "success");
                patientDiatDetailsEditables(false);
                pfSearchBtn.doClick();
                Util.Clear(patientFoodPanel);
            }
        } catch (SQLException e) {
            messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Err_Something_Went_Wrong"), "error");
            LOG.error(e);
        }
    }//GEN-LAST:event_foodUpdateBtnActionPerformed

    private void foodEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodEditBtnActionPerformed
        patientDiatDetailsEditables(true);
    }//GEN-LAST:event_foodEditBtnActionPerformed

    private void pfDetailTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pfDetailTableMouseClicked
        DefaultTableModel model = (DefaultTableModel) pfDetailTable.getModel();
        int patientID = (int) model.getValueAt(pfDetailTable.getSelectedRow(), 0);

        for (PatientFood pf : patientFoodSearchResultList) {
            if (patientID == pf.getPatientID()) {
                foodPIDs.setSelectedItem(String.valueOf(pf.getPatientID()));
                if (pf.getStartDate() != null) {
                    foodDiatType.setSelectedItem(pf.getDiatType());
                    foodDStartDate.setDate(pf.getStartDate());
                    foodDEndDate.setDate(pf.getEndDate());
                } else {
                    foodDStartDate.setDate(null);
                    foodDEndDate.setDate(null);
                }
                break;
            }
            patientDiatDetailsEditables(false);
        }
    }//GEN-LAST:event_pfDetailTableMouseClicked

    private void pfSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfSearchBtnActionPerformed
        try {
            patientFoodSearchResultList = null;
            patientFoodSearchResultList = new ArrayList(PatientController.getInstance().getPatientFoodDetails(pfsearchField.getText()));
            if (patientFoodSearchResultList != null) {
                if (patientFoodSearchResultList.isEmpty()) {
                    messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Err_No_Result_Found"), "error");
                } else {
                    DefaultTableModel model = (DefaultTableModel) pfDetailTable.getModel();
                    //Removing all the rows in the jTable
                    int rowCount = model.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        model.removeRow(i);
                    }
                    //Removing Combo box items (PID)
                    int itemCount = foodPIDs.getItemCount();
                    for (int i = 0; i < itemCount; i++) {
                        foodPIDs.removeItemAt(0);
                    }

                    for (PatientFood pf : patientFoodSearchResultList) {
                        foodPIDs.addItem(String.valueOf(pf.getPatientID()));
                        model.addRow(new Object[]{pf.getPatientID(), pf.getFirstName(), pf.getLastName(), pf.getDiatType(), pf.getStartDate(), pf.getEndDate()});
                    }
                }
            }
        } catch (SQLException ex) {
            messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Err_Something_Went_Wrong"), "error");
            LOG.error(ex);
        }
    }//GEN-LAST:event_pfSearchBtnActionPerformed

    private void detailEditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailEditBtnActionPerformed
        patientDetailsEditables(true);
    }//GEN-LAST:event_detailEditBtnActionPerformed

    private void detailPatientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_detailPatientTableMouseClicked

        DefaultTableModel model = (DefaultTableModel) detailPatientTable.getModel();
        int patientID = (int) model.getValueAt(detailPatientTable.getSelectedRow(), 0);

        for (Patient patient : patientSearchResultList) {
            if (patientID == patient.getPatientID()) {
                detailPID.setText(String.valueOf(patient.getPatientID()));
                detailPFirstName.setText(patient.getFirstName());
                detailPLastName.setText(patient.getLastName());
                detailPDateofBirth.setDate(patient.getDateofBirth());
                detailSexCombo.setSelectedItem(patient.getSex());
                detailPEmail1.setText(patient.getEmail());
                detailPPhoneNumber.setText(patient.getPhoneNumber());
                detailPNIC.setText(patient.getNic());
                detailPAddress.setText(patient.getAddress());
                detailPCity.setText(patient.getCity());
                detailPCode.setText(patient.getPzCode());
                detailPAdditionalInfo.setText(patient.getAdditionalInfo());
                break;
            }
        }
        patientDetailsEditables(false);
    }//GEN-LAST:event_detailPatientTableMouseClicked

    private void pDetailsSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pDetailsSearchBtnActionPerformed
        try {
            patientSearchResultList = null;
            patientSearchResultList = new ArrayList(PatientController.getInstance().getPatientDetails(pDetailsSearchText.getText()));
            if (patientSearchResultList != null) {
                if (patientSearchResultList.isEmpty()) {
                    messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Err_No_Result_Found"), "error");
                } else {
                    DefaultTableModel model = (DefaultTableModel) detailPatientTable.getModel();
                    //Removing all the rows in the jTable
                    int rowCount = model.getRowCount();
                    for (int i = rowCount - 1; i >= 0; i--) {
                        model.removeRow(i);
                    }
                    for (Patient patient : patientSearchResultList) {
                        model.addRow(new Object[]{patient.getPatientID(), patient.getFirstName(), patient.getLastName(), patient.getSex()});
                    }
                }
            }
        } catch (SQLException ex) {
            messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Err_Something_Went_Wrong"), "error");
            LOG.error(ex);
        }
    }//GEN-LAST:event_pDetailsSearchBtnActionPerformed

    private void detailsSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsSubmitBtnActionPerformed
        try {
            Patient patient = new Patient(
                    detailPID.getText(),
                    detailPFirstName.getText(),
                    detailPLastName.getText(),
                    detailSexCombo.getSelectedItem().toString(),
                    detailPEmail1.getText(),
                    detailPPhoneNumber.getText(),
                    detailPNIC.getText(),
                    detailPAddress.getText(),
                    detailPCity.getText(),
                    detailPCode.getText(),
                    detailPAdditionalInfo.getText(),
                    Util.convertUtilDateToSqlDate(detailPDateofBirth.getDate())
            );
            boolean update = PatientController.getInstance().updatePatient(patient);
            if (update) {
                messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Msg_Succesfully_Updated"), "success");
                patientDetailsEditables(false);
                Util.Clear(patientDetailsPanel);
            }
        } catch (SQLException e) {
            messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Err_Something_Went_Wrong"), "error");
            LOG.error(e);
        }
    }//GEN-LAST:event_detailsSubmitBtnActionPerformed

    private void signupSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupSubmitBtnActionPerformed
        if (signupRegisterBtnVali != false) {
            try {
                Patient patient = new Patient(
                        signupPID.getText(),
                        signupPFirstName.getText(),
                        signupPLastName.getText(),
                        signupPSexCombo.getSelectedItem().toString(),
                        signupPEmail.getText(),
                        signupPPhoneNumber.getText(),
                        signupPNIC.getText(),
                        signupPAddress.getText(),
                        signupPCity.getText(),
                        signupPCode.getText(),
                        signupPAdditionalInfo.getText(),
                        Util.convertUtilDateToSqlDate(signupPDateofBirth.getDate())
                );
                PatientController.getInstance().patientSignUp(patient);
                messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Msg_Succesfully_Registered"), "success");
                signupPID.setText(String.valueOf(getLatestPatientID() + 1));
                Util.Clear(patientSignUpPanel);
            } catch (SQLException e) {
                LOG.error(e);
            }
        } else {
            messageAlert.getMessageAlert(DBUtil.getXMLData("PatientMsg", "message", "Err_Something_Went_Wrong"), "error");
            LOG.error("Validation failed");
        }
    }//GEN-LAST:event_signupSubmitBtnActionPerformed

    private void signupPNICCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signupPNICCaretUpdate
        if (!"".equals(signupPNIC.getText())) {
            boolean phoneNumberVali = Validation.isAcceptableNIC(signupPNIC.getText());
            if (phoneNumberVali == false) {
                nicErrorIcon.setVisible(true);
                signupRegisterBtnVali = false;
            } else {
                nicErrorIcon.setVisible(false);
                signupRegisterBtnVali = true;
            }
        }
    }//GEN-LAST:event_signupPNICCaretUpdate

    private void signupPPhoneNumberCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signupPPhoneNumberCaretUpdate
        if (!"".equals(signupPPhoneNumber.getText())) {
            boolean phoneNumberVali = Validation.isAcceptableContactNumber(signupPPhoneNumber.getText());
            if (phoneNumberVali == false) {
                phoneNumberErrorIcon.setVisible(true);
                signupRegisterBtnVali = false;
            } else {
                phoneNumberErrorIcon.setVisible(false);
                signupRegisterBtnVali = true;
            }
        }
    }//GEN-LAST:event_signupPPhoneNumberCaretUpdate

    private void signupPLastNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signupPLastNameCaretUpdate
        if (!"".equals(signupPLastName.getText())) {
            boolean lNameVali = Validation.ContainOnlyLetters(signupPLastName.getText());
            if (lNameVali == false) {
                lNameErrorIcon.setVisible(true);
                signupRegisterBtnVali = false;
            } else {
                lNameErrorIcon.setVisible(false);
                signupRegisterBtnVali = true;
            }
        }
    }//GEN-LAST:event_signupPLastNameCaretUpdate

    private void signupPFirstNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signupPFirstNameCaretUpdate
        if (!"".equals(signupPFirstName.getText())) {
            boolean fNameVali = Validation.ContainOnlyLetters(signupPFirstName.getText());
            if (fNameVali == false) {
                fNameErrorIcon.setVisible(true);
                signupRegisterBtnVali = false;
            } else {
                fNameErrorIcon.setVisible(false);
                signupRegisterBtnVali = true;
            }
        }
    }//GEN-LAST:event_signupPFirstNameCaretUpdate

    private void signupPEmailCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_signupPEmailCaretUpdate
        if (!"".equals(signupPEmail.getText())) {
            boolean emailVali = EmailValidator.getInstance().isValid(signupPEmail.getText());
            if (emailVali == false) {
                emailErrorIcon.setVisible(true);
                signupRegisterBtnVali = false;
            } else {
                emailErrorIcon.setVisible(false);
                signupRegisterBtnVali = true;
            }
        }
    }//GEN-LAST:event_signupPEmailCaretUpdate

    private void CheckUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckUpBtnActionPerformed
        CheckUpAssignment cua = new CheckUpAssignment();
        cua.setVisible(true);
        cua.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        cua.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }//GEN-LAST:event_CheckUpBtnActionPerformed

    private void OperationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OperationBtnActionPerformed
        OperationAssignment oa = new OperationAssignment();
        oa.setVisible(true);
        oa.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        oa.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }//GEN-LAST:event_OperationBtnActionPerformed

    private void newServiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newServiceBtnActionPerformed
        NewService ns = new NewService();
        ns.setVisible(true);
        ns.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        ns.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }//GEN-LAST:event_newServiceBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                

}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientManaging.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientManaging.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientManaging.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        

} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientManaging.class
.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientManaging().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckUpBtn;
    private javax.swing.JButton OperationBtn;
    private javax.swing.JTabbedPane Servicespnel;
    private javax.swing.JButton detailEditBtn;
    private javax.swing.JTextArea detailPAdditionalInfo;
    private javax.swing.JTextField detailPAddress;
    private javax.swing.JTextField detailPCity;
    private javax.swing.JTextField detailPCode;
    private com.toedter.calendar.JDateChooser detailPDateofBirth;
    private javax.swing.JTextField detailPEmail1;
    private javax.swing.JTextField detailPFirstName;
    private javax.swing.JLabel detailPID;
    private javax.swing.JTextField detailPLastName;
    private javax.swing.JTextField detailPNIC;
    private javax.swing.JTextField detailPPhoneNumber;
    private javax.swing.JTable detailPatientTable;
    private javax.swing.JButton detailReportBtn;
    private javax.swing.JComboBox<String> detailSexCombo;
    private javax.swing.JButton detailsSubmitBtn;
    private javax.swing.JLabel emailErrorIcon;
    private javax.swing.JLabel fNameErrorIcon;
    private com.toedter.calendar.JDateChooser foodDEndDate;
    private com.toedter.calendar.JDateChooser foodDStartDate;
    private javax.swing.JComboBox<String> foodDiatType;
    private javax.swing.JButton foodEditBtn;
    private javax.swing.JComboBox<String> foodPIDs;
    private javax.swing.JButton foodUpdateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lNameErrorIcon;
    private javax.swing.JButton newServiceBtn;
    private javax.swing.JLabel nicErrorIcon;
    private javax.swing.JButton pDetailsSearchBtn;
    private javax.swing.JTextField pDetailsSearchText;
    private javax.swing.JPanel patientDetailsPanel;
    private javax.swing.JPanel patientFoodPanel;
    private javax.swing.JLabel patientManagementLbl;
    private javax.swing.JLabel patientSignUpLbl;
    private javax.swing.JLabel patientSignUpLbl1;
    private javax.swing.JLabel patientSignUpLbl2;
    private javax.swing.JLabel patientSignUpLbl3;
    private javax.swing.JPanel patientSignUpPanel;
    private javax.swing.JTable pfDetailTable;
    private javax.swing.JButton pfSearchBtn;
    private javax.swing.JTextField pfsearchField;
    private javax.swing.JLabel phoneNumberErrorIcon;
    private javax.swing.JLabel signupAddressLbl;
    private javax.swing.JLabel signupAddressLbl1;
    private javax.swing.JLabel signupCodeLbl;
    private javax.swing.JLabel signupCodeLbl1;
    private javax.swing.JLabel signupCodeLbl2;
    private javax.swing.JLabel signupCodeLbl3;
    private javax.swing.JLabel signupDOBLbl;
    private javax.swing.JLabel signupDOBLbl1;
    private javax.swing.JLabel signupDOBLbl2;
    private javax.swing.JLabel signupDOBLbl3;
    private javax.swing.JLabel signupEmailLbl;
    private javax.swing.JLabel signupEmailLbl1;
    private javax.swing.JLabel signupEmailLbl2;
    private javax.swing.JLabel signupEmailLbl3;
    private javax.swing.JLabel signupEmailLbl4;
    private javax.swing.JLabel signupFNameLbl;
    private javax.swing.JLabel signupFNameLbl1;
    private javax.swing.JLabel signupNICLbl;
    private javax.swing.JLabel signupNICLbl1;
    private javax.swing.JLabel signupNICLbl2;
    private javax.swing.JLabel signupNICLbl3;
    private javax.swing.JTextArea signupPAdditionalInfo;
    private javax.swing.JTextField signupPAddress;
    private javax.swing.JTextField signupPCity;
    private javax.swing.JTextField signupPCode;
    private com.toedter.calendar.JDateChooser signupPDateofBirth;
    private javax.swing.JTextField signupPEmail;
    private javax.swing.JTextField signupPFirstName;
    private javax.swing.JLabel signupPID;
    private javax.swing.JTextField signupPLastName;
    private javax.swing.JTextField signupPNIC;
    private javax.swing.JTextField signupPPhoneNumber;
    private javax.swing.JComboBox<String> signupPSexCombo;
    private javax.swing.JLabel signupSexlLbl;
    private javax.swing.JButton signupSubmitBtn;
    // End of variables declaration//GEN-END:variables
}
